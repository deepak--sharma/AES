using System;
using System.Collections;
using System.Configuration;
using System.Data;
using System.Linq;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.HtmlControls;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Xml.Linq;
using AES.SolutionFramework;
using AES.BusinessFramework;
using AES.ObjectFramework;

public partial class StudentRegistrationWizardUI : BasePage
{
    #region Page Variables
    StudentRegistrationDetail objStudentRegistrationDetail;
    StudentRegistrationDetailBL objStudentRegistrationDetailBL;
    RegistrationMaster objRegistrationMaster = null;
    RegistrationMasterBL objRegistrationMasterBL = null;

    int registrationMasterId
    {
        get
        {
            return Convert.ToInt32(ViewState["registrationMasterId"]);
        }
        set
        {
            ViewState["registrationMasterId"] = value;
        }
    }
    string qRegMasterId = "RegMasterId";
    string C_AutoGeneratedRegNo = "Test_" + Guid.NewGuid();
    #endregion

    protected void Page_Load(object sender, EventArgs e)
    {
        try
        {
            string jScript = String.Format("return EnableDisable(this.checked,'{0}');", uxFatherWizardUC.ClientID);
            rdbFatherGuardion.Attributes.Add("onclick", jScript);

            jScript = String.Format("return EnableDisable(this.checked,'{0}');", uxMotherWizardUC.ClientID);
            rdbMotherGuardion.Attributes.Add("onclick", jScript);

            jScript = String.Format("return EnableDisable(this.checked,'{0}');", uxGuardianWizardUC.ClientID);
            rdbGuardion.Attributes.Add("onclick", jScript);


            if (!Page.IsPostBack)
            {
                //UI personalization for registered and non-registered users
                InitializeForm();
                if (Request.QueryString.HasKeys())
                {
                    registrationMasterId = Convert.ToInt32(Request.QueryString[qRegMasterId].ToString());
                    if (registrationMasterId > 0)
                    {
                        ddlRegistration.SelectedValue = registrationMasterId.ToString();
                        ddlRegistration.Enabled = false;

                        divRegistrationDate.Visible = false;
                    }
                }

                Page.DataBind();                
            }
        }
        catch (Exception ex)
        {
            throw;
        }
    }
    protected void wzdStudentRegistration_FinishButtonClick(object sender, WizardNavigationEventArgs e)
    {
        try
        {                          
            objStudentRegistrationDetail = GetObjectForSave();
            objStudentRegistrationDetailBL = new StudentRegistrationDetailBL();

            objStudentRegistrationDetail = objStudentRegistrationDetailBL.SaveStudentRegistrationDetail(objStudentRegistrationDetail);

        }
        catch (Exception ex)
        {
            throw;
        }
    }
    protected void wzdStudentRegistration_NextButtonClick(object sender, WizardNavigationEventArgs e)
    {
        try
        {
            switch (e.NextStepIndex)
            {
                case 1:
                    {
                        uxPreviousSchoolEducationWizardUC.InitializeControl();
                    }
                    break;
                case 2:
                    {
                        uxFatherWizardUC.InitializeControl();
                        uxMotherWizardUC.InitializeControl();
                        uxGuardianWizardUC.InitializeControl();
                    }
                    break;
                case 3:
                    {
                        uxSiblingWizardUC1.InitializeControl();
                        uxSiblingWizardUC2.InitializeControl();
                    }
                    break;
            }
        }
        catch (Exception ex)
        {

            throw;
        }
    }
    protected void wzdStudentRegistration_PreviousButtonClick(object sender, WizardNavigationEventArgs e)
    {

    }

    private void InitializeForm()
    {
        uxCandidateWizardUC.InitializeControl();
        objRegistrationMasterBL = new RegistrationMasterBL();
        objRegistrationMaster = new RegistrationMaster();
        objRegistrationMaster.RecordStatus = Convert.ToInt16(RecordStatus.Active);
        objRegistrationMaster = objRegistrationMasterBL.SelectRegistrationMaster(objRegistrationMaster);
        ddlRegistration.DataSource = objRegistrationMaster.ObjectDataSet.Tables[0];
        ddlRegistration.DataBind();
        ddlRegistration.Items.Insert(0, UIUtility.DEFAULT_DDL_VALUE);

        UIController.BindMetadataDDL(ddlBoarding, MetadataTypeEnum.BoardingType);
        calenderRegistrationDate.Text = GeneralUtility.ToStandardDate(DateTime.Now);

        wzdStudentRegistration.ActiveStepIndex = 0;
    }
    private StudentRegistrationDetail GetObjectForSave()
    {
        objStudentRegistrationDetail = new StudentRegistrationDetail();

        objStudentRegistrationDetail.RegistrationNumber = C_AutoGeneratedRegNo;

        if (ddlRegistration.SelectedIndex != 0)
        {
            objStudentRegistrationDetail.RegistrationObject = new RegistrationMaster();
            objStudentRegistrationDetail.RegistrationObject.RegistrationId = Convert.ToInt32(ddlRegistration.SelectedValue);
        }

        if (ddlBoarding.SelectedIndex != 0)
        {
            objStudentRegistrationDetail.BoardingTypeObject = new MetadataMaster();
            objStudentRegistrationDetail.BoardingTypeObject.MetadataId = Convert.ToInt32(ddlBoarding.SelectedValue);
        }
        objStudentRegistrationDetail.IsTransportRequired = Convert.ToBoolean(rblIsTransportRequired.SelectedValue);
        objStudentRegistrationDetail.RegistrationDate = Convert.ToDateTime(calenderRegistrationDate.Text);

        if (!string.IsNullOrEmpty(txtDistance.Text))
        {
            objStudentRegistrationDetail.Distance = Convert.ToInt32(txtDistance.Text);
        }

        objStudentRegistrationDetail.Version = BusinessUtility.RECORD_VERSION;
        objStudentRegistrationDetail.CreatedBy = LoggedInUser;
        objStudentRegistrationDetail.CreatedOn = GeneralUtility.CurrentDateTime;
        objStudentRegistrationDetail.ModifiedBy = LoggedInUser;
        objStudentRegistrationDetail.ModifiedOn = GeneralUtility.CurrentDateTime;
        objStudentRegistrationDetail.RecordStatus = Convert.ToInt16(RecordStatus.Active);

        objStudentRegistrationDetail.CandidateObject = uxCandidateWizardUC.GetControlData();
        objStudentRegistrationDetail.CandidateObject.PreviousSchoolEducationDetailObject = uxPreviousSchoolEducationWizardUC.GetControlData();
        objStudentRegistrationDetail.CandidateObject.FatherObject = uxFatherWizardUC.GetControlData();
        objStudentRegistrationDetail.CandidateObject.FatherObject.IsGuardian = rdbFatherGuardion.Checked;
        objStudentRegistrationDetail.CandidateObject.MotherObject = uxMotherWizardUC.GetControlData();
        objStudentRegistrationDetail.CandidateObject.MotherObject.IsGuardian = rdbMotherGuardion.Checked;
        if (rdbGuardion.Checked)
        {
            objStudentRegistrationDetail.CandidateObject.GuardianObject = uxGuardianWizardUC.GetControlData();
            objStudentRegistrationDetail.CandidateObject.GuardianObject.IsGuardian = true;
        }
        else
        {
            objStudentRegistrationDetail.CandidateObject.GuardianObject = new GuardianDetail();
            objStudentRegistrationDetail.CandidateObject.GuardianObject.FullName = "";
            objStudentRegistrationDetail.CandidateObject.GuardianObject.IsGuardian = false;
        }
        objStudentRegistrationDetail.CandidateObject.SiblingDetailObject1 = uxSiblingWizardUC1.GetControlData();
        objStudentRegistrationDetail.CandidateObject.SiblingDetailObject2 = uxSiblingWizardUC2.GetControlData();

        return objStudentRegistrationDetail;
    }
    
}
